{
 "kind": "discovery#restDescription",
 "etag": "7da790c9e246ebb6b06190e74422d829bb5f6697",
 "discoveryVersion": "v1",
 "id": "toyApi:0.1",
 "name": "toyApi",
 "version": "0.1",
 "revision": "0",
 "protocol": "rest",
 "title": "Toy API",
 "canonicalName": "toy",
 "documentationLink": "https://developers.google.com/discovery/",
 "icons": {
  "x16": "http://www.google.com/images/icons/feature/filing_cabinet_search-g16.png",
  "x32": "http://www.google.com/images/icons/feature/filing_cabinet_search-g32.png"
 },
 "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
 "baseUrl": "http://localhost:9090/api/toyApi/0.1/",
 "basePath": "/api/toyApi/0.1/",
 "rootUrl": "http://localhost:9090/",
 "servicePath": "api/toyApi/0.1/",
 "parameters": {
  "fields": {
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query",
   "type": "string"
  }
 },
 "schemas": {
  "Empty": {
   "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
   "id": "Empty",
   "properties": {},
   "type": "object"
  },
  "ToyResourceResponse": {
   "id": "ToyResourceResponse",
   "type": "object",
   "properties": {
    "result": {
     "type": "string"
    }
   }
  },
  "ToyResponse": {
   "id": "ToyResponse",
   "type": "object",
   "properties": {
    "result": {
     "type": "string"
    }
   }
  },
  "ToyRequest": {
   "id": "ToyRequest",
   "type": "object",
   "properties": {
    "name": {
     "type": "string",
     "required": true
    },
    "age": {
     "type": "integer",
     "default": "1000",
     "format": "int32"
    }
   }
  },
  "ToyAgeRequest": {
   "id": "ToyAgeRequest",
   "type": "object",
   "properties": {
    "age": {
     "type": "integer",
     "default": "1000",
     "format": "int32"
    }
   }
  },
  "ToyAgeRequest2": {
   "id": "ToyAgeRequest2",
   "type": "object",
   "properties": {
    "age": {
     "type": "integer",
     "default": "1000",
     "format": "int32"
    }
   }
  },
  "ToyMapResponse": {
   "id": "ToyMapResponse",
   "type": "object",
   "properties": {
    "properties": {
     "additionalProperties": {
      "type": "string"
     },
     "description": "A collection of arbitrary key-value pairs which are visible to all apps.\nEntries with null values are cleared in update and copy requests.",
     "type": "object"
    },
    "nullValue": {
     "description": "A null value.",
     "enum": [
      "NULL_VALUE"
     ],
     "enumDescriptions": [
      "Null value."
     ],
     "type": "string"
    },
    "result": {
     "type": "string"
    },
    "mapResult": {
     "type": "object",
     "additionalProperties": {
      "$ref": "NestedResponse"
     }
    },
    "v": {
     "type": "any"
    },
    "msgValue": {
     "description": "Output only. Nested message value of the parameter.",
     "items": {
      "additionalProperties": {
       "description": "Properties of the object.",
       "type": "any"
      },
      "type": "object"
     },
     "readOnly": true,
     "type": "array"
    }
   }
  },
  "NestedResponse": {
   "id": "NestedResponse",
   "type": "object",
   "properties": {
    "nestedResult": {
     "type": "string"
    }
   }
  },
  "ListOfString": {
   "id": "ListOfString",
   "type": "array",
   "items": {
    "type": "string"
   }
  },
  "ListOfAny": {
   "id": "ListOfAny",
   "type": "array",
   "items": {
    "type": "any"
   }
  },
  "MapOfint": {
   "id": "MapOfint",
   "type": "object",
   "additionalProperties": {
    "type": "integer",
    "format": "int32"
   }
  },
  "MapOfAny": {
   "id": "MapOfAny",
   "type": "object",
   "additionalProperties": {
    "type": "any"
   }
  },
  "MapOfMapOfint": {
   "id": "MapOfMapOfint",
   "type": "object",
   "additionalProperties": {
    "type": "object",
    "additionalProperties": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "MapOfMapOfbool": {
   "id": "MapOfMapOfbool",
   "type": "object",
   "additionalProperties": {
    "type": "object",
    "additionalProperties": {
     "type": "boolean"
    }
   }
  },
  "ListOfListOfint": {
   "id": "ListOfListOfint",
   "type": "array",
   "items": {
    "type": "array",
    "items": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "ListOfListOfString": {
   "id": "ListOfListOfString",
   "type": "array",
   "items": {
    "type": "array",
    "items": {
     "type": "string"
    }
   }
  },
  "MapOfListOfMapOfint": {
   "id": "MapOfListOfMapOfint",
   "type": "object",
   "additionalProperties": {
    "type": "array",
    "items": {
     "type": "object",
     "additionalProperties": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "MapOfListOfMapOfbool": {
   "id": "MapOfListOfMapOfbool",
   "type": "object",
   "additionalProperties": {
    "type": "array",
    "items": {
     "type": "object",
     "additionalProperties": {
      "type": "boolean"
     }
    }
   }
  },
  "ListOfMapOfListOfint": {
   "id": "ListOfMapOfListOfint",
   "type": "array",
   "items": {
    "type": "object",
    "additionalProperties": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "ListOfMapOfListOfString": {
   "id": "ListOfMapOfListOfString",
   "type": "array",
   "items": {
    "type": "object",
    "additionalProperties": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "ListOfToyRequest": {
   "id": "ListOfToyRequest",
   "type": "array",
   "items": {
    "$ref": "ToyRequest"
   }
  },
  "MapOfToyResponse": {
   "id": "MapOfToyResponse",
   "type": "object",
   "additionalProperties": {
    "$ref": "ToyResponse"
   }
  },
  "ListOfListOfToyRequest": {
   "id": "ListOfListOfToyRequest",
   "type": "array",
   "items": {
    "type": "array",
    "items": {
     "$ref": "ToyRequest"
    }
   }
  }
 },
 "methods": {
  "noop": {
   "id": "ToyApi.noop",
   "path": "noop",
   "httpMethod": "GET",
   "parameters": {},
   "parameterOrder": []
  },
  "failing": {
   "id": "ToyApi.failing",
   "path": "failing",
   "httpMethod": "GET",
   "parameters": {},
   "parameterOrder": []
  },
  "hello": {
   "id": "ToyApi.hello",
   "path": "hello",
   "httpMethod": "GET",
   "parameters": {},
   "parameterOrder": [],
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "helloReturnNull": {
   "id": "ToyApi.helloReturnNull",
   "path": "helloReturnNull",
   "httpMethod": "GET",
   "parameters": {},
   "parameterOrder": [],
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "helloNameAge": {
   "id": "ToyApi.helloNameAge",
   "path": "hello/{name}/age/{age}",
   "httpMethod": "GET",
   "parameters": {
    "name": {
     "type": "string",
     "description": "Path parameter: 'name'.",
     "required": true,
     "location": "path"
    },
    "age": {
     "type": "integer",
     "description": "Path parameter: 'age'.",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "name",
    "age"
   ],
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "helloPost": {
   "id": "ToyApi.helloPost",
   "path": "helloPost",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "ToyRequest"
   },
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "helloVoid": {
   "id": "ToyApi.helloVoid",
   "path": "helloVoid",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "helloNamePostAge": {
   "id": "ToyApi.helloNamePostAge",
   "path": "helloPost/{name}",
   "httpMethod": "POST",
   "parameters": {
    "name": {
     "type": "string",
     "description": "Path parameter: 'name'.",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "name"
   ],
   "request": {
    "$ref": "ToyAgeRequest"
   },
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "helloNestedMap": {
   "id": "ToyApi.helloNestedMap",
   "path": "helloNestedMap",
   "httpMethod": "GET",
   "parameters": {},
   "parameterOrder": [],
   "response": {
    "$ref": "ToyMapResponse"
   }
  },
  "helloNameQueryAgeFoo": {
   "id": "ToyApi.helloNameQueryAgeFoo",
   "path": "helloQuery/{name}",
   "httpMethod": "GET",
   "parameters": {
    "name": {
     "type": "string",
     "description": "Path parameter: 'name'.",
     "required": true,
     "location": "path"
    },
    "foo": {
     "type": "string",
     "description": "Query parameter: 'foo'.",
     "required": true,
     "location": "query"
    },
    "age": {
     "type": "integer",
     "description": "Query parameter: 'age'.",
     "required": false,
     "location": "query"
    }
   },
   "parameterOrder": [
    "foo"
   ],
   "response": {
    "$ref": "ToyResponse"
   }
  },
  "reverseList": {
   "id": "ToyApi.reverseList",
   "path": "reverseList",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "ListOfString"
   },
   "response": {
    "$ref": "ListOfString"
   }
  },
  "helloMap": {
   "id": "ToyApi.helloMap",
   "path": "helloMap",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "MapOfint"
   },
   "response": {
    "$ref": "MapOfint"
   }
  },
  "helloNestedMapMap": {
   "id": "ToyApi.helloNestedMapMap",
   "path": "helloNestedMapMap",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "MapOfMapOfint"
   },
   "response": {
    "$ref": "MapOfMapOfbool"
   }
  },
  "helloNestedListList": {
   "id": "ToyApi.helloNestedListList",
   "path": "helloNestedListList",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "ListOfListOfint"
   },
   "response": {
    "$ref": "ListOfListOfString"
   }
  },
  "helloNestedMapListMap": {
   "id": "ToyApi.helloNestedMapListMap",
   "path": "helloNestedMapListMap",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "MapOfListOfMapOfint"
   },
   "response": {
    "$ref": "MapOfListOfMapOfbool"
   }
  },
  "helloNestedListMapList": {
   "id": "ToyApi.helloNestedListMapList",
   "path": "helloNestedListMapList",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "ListOfMapOfListOfint"
   },
   "response": {
    "$ref": "ListOfMapOfListOfString"
   }
  },
  "helloListOfClass": {
   "id": "ToyApi.helloListOfClass",
   "path": "helloListOfClass",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "ListOfToyRequest"
   },
   "response": {
    "$ref": "MapOfToyResponse"
   }
  },
  "helloListOfListOfClass": {
   "id": "ToyApi.helloListOfListOfClass",
   "path": "helloListOfListOfClass",
   "httpMethod": "POST",
   "parameters": {},
   "parameterOrder": [],
   "request": {
    "$ref": "ListOfListOfToyRequest"
   },
   "response": {
    "$ref": "MapOfToyResponse"
   }
  }
 },
 "resources": {
  "compute": {
   "methods": {
    "get": {
     "id": "ToyApi.compute.get",
     "path": "toyresource/{resource}/compute/{compute}",
     "httpMethod": "GET",
     "parameters": {
      "resource": {
       "type": "string",
       "description": "Path parameter: 'resource'. Should not be empty.",
       "required": true,
       "location": "path"
      },
      "compute": {
       "type": "string",
       "description": "Path parameter: 'compute'. Must be at least three characters long.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "resource",
      "compute"
     ],
     "response": {
      "$ref": "ToyResourceResponse"
     }
    },
    "download": {
     "description": "Downloads media. Download is supported on the URI `/v1/media/{+name}?alt=media`.",
     "httpMethod": "GET",
     "id": "ToyApi.compute.download",
     "parameterOrder": [
      "resourceName"
     ],
     "parameters": {
      "resourceName": {
       "description": "Name of the media that is being downloaded. See ReadRequest.resource_name.",
       "location": "path",
       "pattern": "^.*$",
       "required": true,
       "type": "string"
      }
     },
     "path": "v1/media/{+resourceName}",
     "response": {
      "$ref": "ToyResourceResponse"
     },
     "supportsMediaDownload": true
    },
    "export": {
     "description": "Exports a Google Doc to the requested MIME type and returns the exported content. Please note that the exported content is limited to 10MB.",
     "httpMethod": "GET",
     "id": "ToyApi.compute.export",
     "parameterOrder": [
      "fileId",
      "mimeType"
     ],
     "parameters": {
      "fileId": {
       "description": "The ID of the file.",
       "location": "path",
       "required": true,
       "type": "string"
      },
      "mimeType": {
       "description": "The MIME type of the format requested for this export.",
       "location": "query",
       "required": true,
       "type": "string"
      }
     },
     "path": "files/{fileId}/export",
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsMediaDownload": true
    }
   },
   "resources": {}
  },
  "storage": {
   "methods": {
    "get": {
     "id": "ToyApi.storage.get",
     "path": "toyresource/{resource}/storage/{storage}",
     "httpMethod": "GET",
     "parameters": {
      "resource": {
       "type": "string",
       "description": "Path parameter: 'resource'. Can be used in a url like https://example.com/[resource]/something",
       "required": true,
       "location": "path"
      },
      "storage": {
       "type": "string",
       "description": "Path parameter: 'storage'. Learn more at [the web site](https://example.com).",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "resource",
      "storage"
     ],
     "response": {
      "$ref": "ToyResourceResponse"
     }
    }
   },
   "resources": {}
  }
 }
}
